openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:9000/api
    description: Generated server url
paths:
  /customers:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
    post:
      tags:
        - customer-controller
      operationId: saveCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
  /checkouts/{id}/shippingAddress:
    put:
      tags:
        - checkout-controller
      operationId: updateShippingAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutWithShippingDto'
    post:
      tags:
        - checkout-controller
      operationId: saveShippingAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutWithShippingDto'
  /checkouts/{id}/products:
    put:
      tags:
        - checkout-controller
      operationId: updateQuantityProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutProductDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutBasicDto'
    post:
      tags:
        - checkout-controller
      operationId: addProductCheckout
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutProductDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutBasicDto'
  /checkouts/{id}/cardPayment:
    put:
      tags:
        - checkout-controller
      operationId: updatePaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutPaymentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - checkout-controller
      operationId: savePaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutPaymentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /addresses/{id}:
    put:
      tags:
        - customer-address-controller
      operationId: updateAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressDto'
  /checkouts:
    post:
      tags:
        - checkout-controller
      operationId: basicCheckout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutBasicDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutBasicDto'
  /checkouts/{id}/generateOrder:
    post:
      tags:
        - checkout-controller
      operationId: confirmOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutConfirmDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutInfoDto'
  /addresses:
    get:
      tags:
        - customer-address-controller
      operationId: getCustomerAddresses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressDto'
    post:
      tags:
        - customer-address-controller
      operationId: saveAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressDto'
  /products:
    get:
      tags:
        - product-controller
      operationId: getProducts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /checkouts/{id}:
    get:
      tags:
        - checkout-controller
      operationId: getCheckout
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckoutInfoDto'
  /checkouts/{id}/products/{idProduct}:
    delete:
      tags:
        - checkout-controller
      operationId: deleteCheckoutProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idProduct
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
components:
  schemas:
    CustomerDto:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        id:
          type: string
        firstName:
          maxLength: 50
          minLength: 2
          pattern: ^([a-zA-ZáéíóúüÁÉÍÓÚÜñÑ]{2,50}[\,\-\.]{0,1}[\s]{0,1}){1,3}$
          type: string
        lastName:
          maxLength: 50
          minLength: 2
          pattern: ^([a-zA-ZáéíóúüÁÉÍÓÚÜñÑ]{2,50}[\,\-\.]{0,1}[\s]{0,1}){1,3}$
          type: string
        email:
          type: string
        phone:
          pattern: ^\+503(?:\s\d{4}){2}$
          type: string
    ShippingDto:
      required:
        - id
        - idShipping
      type: object
      properties:
        id:
          type: integer
          format: int64
        idShipping:
          type: integer
          format: int64
    AddressDto:
      required:
        - addressName
        - city
        - houseNumber
        - referenceName
        - referencePhone
        - state
        - street
      type: object
      properties:
        id:
          type: integer
          format: int64
        addressName:
          maxLength: 50
          minLength: 2
          type: string
        state:
          maxLength: 50
          minLength: 2
          type: string
        city:
          maxLength: 50
          minLength: 2
          type: string
        street:
          maxLength: 100
          minLength: 2
          type: string
        referencePhone:
          pattern: ^\+503(?:\s\d{4}){2}$
          type: string
        houseNumber:
          maxLength: 10
          minLength: 0
          type: string
        referenceName:
          maxLength: 50
          minLength: 2
          type: string
    CheckoutProductDto:
      required:
        - idProduct
        - quantity
      type: object
      properties:
        id:
          type: integer
          format: int64
        idProduct:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        total:
          type: number
          format: double
    CheckoutWithShippingDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CheckoutProductDto'
        shippingAddress:
          $ref: '#/components/schemas/AddressDto'
        totalCheckout:
          type: number
          format: double
    CheckoutBasicDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CheckoutProductDto'
        totalCheckout:
          type: number
          format: double
    CheckoutPaymentDto:
      required:
        - id
        - idCard
      type: object
      properties:
        id:
          type: integer
          format: int64
        idCard:
          type: integer
          format: int64
    CheckoutConfirmDto:
      required:
        - id
        - securityCode
      type: object
      properties:
        id:
          type: integer
          format: int64
        securityCode:
          maxLength: 4
          minLength: 3
          type: string
    CardPayment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customer:
          $ref: '#/components/schemas/Customer'
        cardNumber:
          type: string
        cardHoldername:
          type: string
        expirationDate:
          type: string
    CardPaymentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardNumber:
          type: string
        cardHoldername:
          type: string
        expirationDate:
          type: string
    CheckoutInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CheckoutProductDto'
        shippingAddress:
          $ref: '#/components/schemas/AddressDto'
        paymentCode:
          type: string
        status:
          type: string
          enum:
            - OPEN
            - DONE
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/Customer'
        cardPayment:
          $ref: '#/components/schemas/CardPaymentDto'
        totalCheckout:
          type: number
          format: double
    Customer:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        addresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
        cards:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CardPayment'
    CustomerAddress:
      type: object
      properties:
        id:
          type: integer
          format: int64
        addressName:
          type: string
        state:
          type: string
        city:
          type: string
        street:
          type: string
        referencePhone:
          type: string
        houseNumber:
          type: string
        referenceName:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string
        stock:
          type: integer
          format: int32
        price:
          type: number
          format: double
